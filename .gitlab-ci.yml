image: registry.gitlab.com/citygro/docker-and-compose

services:
  - docker:dind
      
variables:
  DOCKER_DRIVER: overlay

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - docker info
    - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
    - docker-compose build --pull web
    - docker-compose push web

test:
  script:
    - docker-compose run web bash -c 'bundle && bundle exec rake db:create db:migrate db:test:prepare RAILS_ENV=test'
    - docker-compose exec solr bash -c 'bin/solr create -c development -d /opt/config' || true
    - docker-compose run web bundle exec rake
    - docker-compose run web bundle exec rake assets:precompile
  after_script:
    - docker-compose stop

staging:
  image: registry.gitlab.com/notch8/scripts/builder:latest
  type: deploy
  script:
    # Set ssh key
    - echo $SSH_DEPLOY_KEY | base64 -d > $CI_PROJECT_DIR/ops/keys/deploy
    - chmod 600 $CI_PROJECT_DIR/ops/keys/deploy
    # Set ssh key
    - echo $SSH_KEY | base64 -d > $CI_PROJECT_DIR/ops/keys/hydra.pem
    - chmod 600 $CI_PROJECT_DIR/ops/keys/hydra.pem 
    # set group vars
    - echo $GROUP_VARS_ALL | base64 -d > $CI_PROJECT_DIR/ops/group_vars/all
    # set ec2.ini
    - echo $EC2_INI | base64 -d > $CI_PROJECT_DIR/ops/ec2.ini
    - ./bin/deploy staging
  only:
    - master

production:
  image: registry.gitlab.com/notch8/scripts/builder:latest
  type: deploy
  script:
    # Set ssh key
    - echo $SSH_DEPLOY_KEY | base64 -d > $CI_PROJECT_DIR/ops/keys/deploy
    - chmod 600 $CI_PROJECT_DIR/ops/keys/deploy
    # Set ssh key
    - echo $SSH_KEY | base64 -d > $CI_PROJECT_DIR/ops/keys/hydra.pem
    - chmod 600 $CI_PROJECT_DIR/ops/keys/hydra.pem 
    # set group vars
    - echo $GROUP_VARS_ALL | base64 -d > $CI_PROJECT_DIR/ops/group_vars/all
    # set ec2.ini
    - echo $EC2_INI | base64 -d > $CI_PROJECT_DIR/ops/ec2.ini
    - ./bin/deploy production
  when: manual
